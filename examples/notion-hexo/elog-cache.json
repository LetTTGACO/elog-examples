[
  {
    "id": "18407aee-a1a4-414c-8a9f-090afaa88d24",
    "doc_id": "18407aee-a1a4-414c-8a9f-090afaa88d24",
    "properties": {
      "index_img": "",
      "categories": [],
      "excerpt": "",
      "tags": [],
      "show_category": "",
      "status": "已发布",
      "date": "2022-11-25 23:24:00",
      "urlname": "18407aee-a1a4-414c-8a9f-090afaa88d24",
      "title": "已发布",
      "updated": "2022-11-29 17:19:00"
    },
    "body": "\n已发布测试\n\n\n[嵌入页面](48b3ba5a-8622-42a1-94ce-a967206aa287)\n\n\n\t测试嵌入页面\n\n",
    "updated": 1669713540000
  },
  {
    "id": "96524b03-f8cf-4ba4-a17b-feb368da4dd2",
    "doc_id": "96524b03-f8cf-4ba4-a17b-feb368da4dd2",
    "properties": {
      "index_img": "",
      "categories": [
        "Week04: Go 工程化"
      ],
      "excerpt": "描述",
      "tags": [
        "notion"
      ],
      "show_category": "",
      "status": "待发布",
      "date": "2022-11-28",
      "urlname": "notion-markdown-blog0",
      "title": "  测试新增",
      "updated": "2022-12-06 19:42:00"
    },
    "body": "\n![](https://raw.githubusercontent.com/LetTTGACO/image/master/elog-test/FjtNFxd1Fm4UFNP3ruMOXh5hId8g.png)\n\n\n有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片\n\n",
    "updated": 1670326920000
  },
  {
    "id": "dd687f1a-6cdb-4f1f-b2b9-cc8ab82dc785",
    "doc_id": "dd687f1a-6cdb-4f1f-b2b9-cc8ab82dc785",
    "properties": {
      "index_img": "",
      "categories": [
        "Week04: Go 工程化"
      ],
      "excerpt": "描述",
      "tags": [
        "notion"
      ],
      "show_category": "",
      "status": "待发布",
      "date": "2022-11-28",
      "urlname": "notion-markdown-blog2",
      "title": "  测试新增2",
      "updated": "2022-12-06 19:42:00"
    },
    "body": "\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/ce2a69f6-f914-46a4-8e1b-9ec582110d56/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20221206%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221206T163552Z&X-Amz-Expires=3600&X-Amz-Signature=030e7825206b63ad69b14d6477f25ad16bbde484d3ca298002cc7f1fe7e2b7c8&X-Amz-SignedHeaders=host&x-id=GetObject)\n\n\n有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片\n\n",
    "updated": 1670326920000
  },
  {
    "id": "eb4c5d1f-6bd2-48a2-b27c-f83b38dec117",
    "doc_id": "eb4c5d1f-6bd2-48a2-b27c-f83b38dec117",
    "properties": {
      "index_img": "",
      "categories": [
        "博客折腾手册"
      ],
      "excerpt": "当博客文章变多了之后就发现，放在 hexo 的本地文件夹中管理就有些力不从心了",
      "tags": [
        "notion",
        "hexo",
        "blog"
      ],
      "show_category": "",
      "status": "待发布",
      "date": "2021-12-20",
      "urlname": "notion-markdown-blog",
      "title": "使用 Notion Database 管理静态博客文章",
      "updated": "2022-12-06 19:42:00"
    },
    "body": "\n> 我终于想起来 Github 的账号了, 有段时间没有更新博客了，换了新工作总归是有一点适应期，后面应该就会照常更新了\n\n\n## 背景\n\n\n其实在最开始计划的时候，第一篇文章应该是另外一个主题，但是每次开始写文章的时候都忍不住去折腾一下博客（又可以水两篇文章了）\n\n\n### hexo 文章管理\n\n\n在准备写文章的时候发现 hexo 在文章多了之后管理上很不方便，现在博客也已经有了 150+ 博文了，所有的文章都放在了 `_posts` 文件夹下面\n\n\n![博客源文件目录](https://raw.githubusercontent.com/LetTTGACO/image/master/elog-test/Fgp2TOB839tesV7JHtaQXsXhh3rx.png)\n\n\n如上图所示，虽然文章按照分类拆分了文件夹进行管理，但是还是不是特别清晰，毕竟不是所有的文章都是专题文章，还是有一部分笔记或者是其他文章的，在 hexo 中我们给文章分配了标签分类等字段用来区分，但是在实际的文件管理上还是不行\n\n\n### 语雀文章管理\n\n\n之前还在用语雀记录笔记的时候，文章是直接放在了 [语雀](https://www.yuque.com/mohuishou/blog) 上然后通过 [yuque-hexo](https://github.com/x-cold/yuque-hexo) + github actions 自动发布，但是后面将笔记切回 notion 之后，就没用语雀同步了。\n\n\n> 语雀本身功能很丰富更新也比较及时，但是很多功能只是做了，做的不够好不够精细，细致上体验下去的时候用着就会有点难受。并且没有像 notion 的 database 的功能，在一些场景下不够灵活。当然语雀本身还是比较好用的，用来记录一些专辑会比较舒适流畅，但是不是特别适合用来记录笔记，特别是标签功能，做的有点残废，不知道现在有没有好一些。\n\n\n![](https://raw.githubusercontent.com/LetTTGACO/image/master/elog-test/Fr5VCZmaFxXZKPu-My47TPYRNl4K.png)\n\n\n可以看到上图，语雀的文章本身是没有其它额外的属性的，所以我们为了支持 hexo 的 yaml frontmatter 就做了一些额外的约定和处理，但是在 notion 的 database 里面这个问题就不存在了，刚刚好可以完美的解决这个问题\n\n\n![](https://raw.githubusercontent.com/LetTTGACO/image/master/elog-test/FsOcqvhXD71Z9DKVVcFLBxvFWBvL.png)\n\n\n## 方案\n\n\nok, idea 有了之后，我们大概想想方案，我大概调研了一下现在存在的主要方案大概可以分为三种\n\n- 第一种就是，使用 notion database 作为 baas 后端，另写前端页面来获取数据渲染，这种方案的典型代表是 [nextjs-notion-starter-kit](https://github.com/transitive-bullshit/nextjs-notion-starter-kit)\n\n\t这种方式的主要问题是，在国内的加载速度和不确定性的问题，因为国情原因，notion 访问本身比较慢，并且还存在一些不确定性\n\n- 第二种和第一种类似，但是第二种方案可以直接生成静态页面，所以就有着和静态博客一样的速度和灵活性，我们可以直接部署在国内。这种方法的典型方式是 [Gatsby+Notion](https://www.gatsbyjs.com/plugins/gatsby-source-notion-api/)\n\n\t这种方式的主要问题是主题不够丰富，大概率需要自己修改很多东西才能用，和成熟的 hugo、hexo 比，差的有点太多\n\n- 第三种方案就是将 Notion Page 转换为 Markdown 文件，然后就可以直接使用 hugo、hexo 等成熟的静态博客生成器了\n这个的主要问题是虽然现在 notion 官方开放了 api，但是没有 api 可以直接将 notion 的数据结构之间转换为 markdown，现在虽然有一些第三方库（例如 [notion2md](https://github.com/echo724/notion2md) ）支持，但是存在着各种各样的问题，要么不支持图片，要么不支持 table 等格式，总是会欠缺一些\n\n经过对比，和当前遇到的问题，我选择了第三种方案，然后自己造个简单的转换轮子\n\n- 我现在的 hexo 主题使用的还算满意，已经折腾改造过很多次了，不想再改造了（预告一下后面有一篇文章给大家介绍如何使用这个主题给自己的博客也加上左侧的章节目录）\n- 其次是 notion 其实自己可以导出 markdown 文件，我只要使用 notion cookie 调用一下就可以了，工作量其实不是很大，并且后续 notion 即使出其他的 block 大概率也会支持导出，这样我们就不用去单独做兼容了\n\n**ok，思路有了，我们看一下最后的方案**\n\n\n![](https://raw.githubusercontent.com/LetTTGACO/image/master/elog-test/FkKASNy5b5nspoo0adElI5yGnHhz.png)\n\n- 使用 Notion Database 作为我们的存储后端\n- Notion Database 中的属性对应到 Markdown 中 YAML FrontMatter\n- 为了避免每次都获取所有的文章数据，我们添加一个 `status` 字段，当 `status` 为 `待发布` 的时候我们才去下载对应的文章，文章下载完成之后，我们就把这篇文章的状态修改为 `已发布`\n- 由于 notion 的导出 api 导出的文件是一个文件夹，所以我们导出之后需要解压缩\n- 导出的 markdown 文件中，属性的字段会被放在文章的标题下，所以我们需要做一些转换，把它转为 YAML FrontMatter\n- 最后 notion 在导出文件的时候如果里面包含了图片，会创建一个文件夹，我们需要把文件夹中的图片移动到我们需要的目录，例如统一放到 `img` 目录下\n\n## 使用\n\n\n具体代码就不贴了，也没有几行，看下最后的成果就行了（这篇文章就是）\n\n\n```protobuf\n\n```\n\n",
    "updated": 1670326920000
  },
  {
    "id": "94e6fb2d-22e7-4b82-86cb-1bae60017874",
    "doc_id": "94e6fb2d-22e7-4b82-86cb-1bae60017874",
    "properties": {
      "index_img": "",
      "categories": [
        "Week04: Go 工程化"
      ],
      "excerpt": "描述",
      "tags": [
        "notion"
      ],
      "show_category": "",
      "status": "待发布",
      "date": "2022-11-28",
      "urlname": "notion-markdown-blog1",
      "title": "  测试新增1",
      "updated": "2022-12-06 19:42:00"
    },
    "body": "\n![](https://raw.githubusercontent.com/LetTTGACO/image/master/elog-test/FjtNFxd1Fm4UFNP3ruMOXh5hId8g.png)\n\n\n有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片有图片\n\n",
    "updated": 1670326920000
  }
]